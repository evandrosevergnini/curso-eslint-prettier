Nesta branch vamos criar uma regra customizada e us√°-la no nosso projeto.
- Na raiz do projeto crie a pasta eslint-plugin-ecs
- Nesta pasta crie um arquivo package.json:
  {
    "name": "eslint-plugin-ecs",
    "version": "1.0.0",
    "main": "index.js"
  }
- Nela crie tamb√©m um arquivo index.js:
  module.exports = {
    rules: {
      'no-template-literals': {
        // eslint-disable-next-line func-names, object-shorthand
        create: function (context) {
          return {
            TemplateLiteral(node) {
              context.report(node, 'Do not use template literals')
            },
          }
        },
      },
    },
  }
- No terminal, execute: npm install --save-dev file:eslint-plugin-ecs
- No arquivo .eslintrc.json:
  ‚úîÔ∏è "plugins": ["ecs"],
  ‚úîÔ∏è "rules": {
      "no-console": "off",
      "ecs/no-template-literals": 1
    }
- Caso necess√°rio, recarregue o VS code
- No arquivo main.js acrescente o c√≥digo:
  ‚úîÔ∏è console.log(`result`, result)
  ‚úîÔ∏è console.log(`result ${result}`)
- Observe que a nossa regra √© aplicada pelo ESLint
- No arquivo index.js altera a fun√ß√£o create:
  ‚úîÔ∏è create: function (context) {
      console.log('context', context)
      return {
        TemplateLiteral(node) {
          console.log('node', node)
          if (node.expressions.length === 0) {
            context.report(node, 'Do not use template literals')
          }
        },
      }
    },
- Recarregue o VS Code, caso necess√°rio
- Observe que agora apenas a template literal que n√£o usa uma Expression ${} √© reportada
- Remova as outras linhas de console

üòé
FIM